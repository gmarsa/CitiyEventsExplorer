// Mocks generated by Mockito 5.4.6 from annotations
// in city_events_explorer/test/unit/events_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:city_events_explorer/src/domain/models/event.dart' as _i4;
import 'package:city_events_explorer/src/domain/repositories/events_repository.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [EventsRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockEventsRepository extends _i1.Mock implements _i2.EventsRepository {
  MockEventsRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.Event>> getEvents() =>
      (super.noSuchMethod(
            Invocation.method(#getEvents, []),
            returnValue: _i3.Future<List<_i4.Event>>.value(<_i4.Event>[]),
          )
          as _i3.Future<List<_i4.Event>>);

  @override
  _i3.Future<List<_i4.Event>> searchEvents(String? query) =>
      (super.noSuchMethod(
            Invocation.method(#searchEvents, [query]),
            returnValue: _i3.Future<List<_i4.Event>>.value(<_i4.Event>[]),
          )
          as _i3.Future<List<_i4.Event>>);

  @override
  _i3.Future<List<_i4.Event>> filterEventsByCategory(String? category) =>
      (super.noSuchMethod(
            Invocation.method(#filterEventsByCategory, [category]),
            returnValue: _i3.Future<List<_i4.Event>>.value(<_i4.Event>[]),
          )
          as _i3.Future<List<_i4.Event>>);

  @override
  _i3.Future<List<_i4.Event>> filterEventsByDateRange(
    DateTime? startDate,
    DateTime? endDate,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#filterEventsByDateRange, [startDate, endDate]),
            returnValue: _i3.Future<List<_i4.Event>>.value(<_i4.Event>[]),
          )
          as _i3.Future<List<_i4.Event>>);

  @override
  _i3.Future<List<String>> getCategories() =>
      (super.noSuchMethod(
            Invocation.method(#getCategories, []),
            returnValue: _i3.Future<List<String>>.value(<String>[]),
          )
          as _i3.Future<List<String>>);
}
